services:
  redis-broker:
    image: redis:7.4.0-alpine
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    command: --port ${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  redisinsights:
    image: redis/redisinsight:latest
    restart: always
    ports:
      - "5540:5540"
    volumes:
      - ./db-data/redisinsight:/db
    # environment:
    #   - RI_APP_HOST=${REDIS_HOST}:${REDIS_PORT}

  broker:
    build:
      dockerfile: Dockerfile
      context: ./broker
    volumes:
      - ./broker:/app
      - ./.env:/.env
      - ./shared:/shared
    ports:
    - 3005:${BROKER_PORT}
    depends_on:
      - db

  producer:
    build:
      dockerfile: Dockerfile
      context: ./producer
    volumes:
      - ./producer:/app
      - ./.env:/.env
      - ./shared:/shared
    depends_on:
      - broker
    deploy:
      mode: replicated
      replicas: 1

  consumer:
    build:
      dockerfile: Dockerfile
      context: ./consumer
    volumes:
      - ./consumer:/app
      - ./.env:/.env
      - ./shared:/shared
    depends_on:
      - producer
    deploy:
      mode: replicated
      replicas: 1

  front:
    container_name: front_watcher
    build:
      context: ./front
      dockerfile: Dockerfile
    environment:
      # - VITE_API_URL=${VITE_API_URL}
      # - VITE_API_AUDIENCE_ID=${VITE_API_AUDIENCE_ID}
      # - VITE_API_TENANT_ID=${VITE_API_TENANT_ID}
      - BROKER_HOST_FROM_FRONT=${BROKER_HOST_FROM_FRONT}
      - BROKER_HOST=${BROKER_HOST}
      - BROKER_PORT=${BROKER_PORT}
      - BROKER_TOPIC=${BROKER_TOPIC}
      - VITE_API_SSO_AUDIENCE_ID=${VITE_API_SSO_AUDIENCE_ID}
      - VITE_API_SSO_TENANT_ID=${VITE_API_SSO_TENANT_ID}

    volumes:
      - ./front/src:/app/src
      - ./common:/app/src/common
    ports:
      - 5173:${FRONT_PORT}
    # depends_on:
    #   - broker

  db:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
     - ./db-data/postgres:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  